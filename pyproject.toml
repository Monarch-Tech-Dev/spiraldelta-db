[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "spiraldelta-db"
version = "0.1.0"
description = "Open-source vector database with geometric spiral ordering and delta compression"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "AGPL-3.0"}
authors = [
    {name = "Monarch AI Community", email = "community@monarchai.com"},
]
maintainers = [
    {name = "Monarch AI", email = "spiraldelta@monarchai.com"},
]
keywords = [
    "vector-database", 
    "compression", 
    "similarity-search", 
    "ai", 
    "embeddings",
    "spiral-ordering",
    "delta-compression",
    "open-source"
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: GNU Affero General Public License v3",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Database",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

dependencies = [
    "numpy>=1.21.0",
    "scipy>=1.7.0",
    "scikit-learn>=1.0.0",
    "hnswlib>=0.7.0",
    "numba>=0.56.0",
    "joblib>=1.1.0",
    "tqdm>=4.62.0",
    "pydantic>=1.8.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-benchmark>=4.0.0",
    "black>=22.0.0",
    "isort>=5.10.0",
    "flake8>=4.0.0",
    "mypy>=0.950",
    "pre-commit>=2.17.0",
]
benchmark = [
    "matplotlib>=3.5.0",
    "plotly>=5.0.0",
    "pandas>=1.4.0",
    "seaborn>=0.11.0",
    "memory-profiler>=0.60.0",
]
examples = [
    "transformers>=4.20.0",
    "torch>=1.12.0",
    "datasets>=2.0.0",
    "streamlit>=1.10.0",
]

[project.urls]
Homepage = "https://github.com/monarch-ai/spiraldelta-db"
Documentation = "https://spiraldelta-db.readthedocs.io"
Repository = "https://github.com/monarch-ai/spiraldelta-db.git"
Issues = "https://github.com/monarch-ai/spiraldelta-db/issues"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-dir]
"" = "src"

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["spiraldelta"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "hnswlib.*",
    "numba.*",
    "scipy.*",
    "sklearn.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*", "*Test"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--tb=short",
    "--cov=spiraldelta",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "benchmark: marks tests as benchmarks",
]

[tool.coverage.run]
source = ["src/spiraldelta"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
    "*/examples/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]